{"version":3,"sources":["App.js","index.js"],"names":["emojiDict","emojis","Object","keys","App","useState","emoji","setEmoji","meaning","setMeaning","className","onChange","event","emojiInput","target","value","placeholder","map","onClick","inputEmoji","emojiClickHandler","style","fontSize","padding","cursor","rootElement","document","getElementById","ReactDOM","render"],"mappings":"sJAIMA,EAAY,CAChB,eAAM,UACN,eAAM,YACN,eAAM,MACN,eAAM,cACN,eAAM,OACN,eAAM,YACN,eAAM,eACN,eAAM,iBACN,eAAM,cACN,eAAM,OACN,eAAM,eACN,eAAM,0BAEFC,EAASC,OAAOC,KAAKH,GA2CZI,MA1Cf,WACE,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA8BF,mBAAS,uCAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KAiBA,OACE,sBAAKC,UAAU,MAAf,UACE,6CACA,uBACEC,SApBN,SAAoBC,GAClB,IAAIC,EAAaD,EAAME,OAAOC,MAC9BR,EAASM,GAKPJ,EADEI,KAAcb,EACLA,EAAUa,GAEV,iCAYTE,MAAOT,EACPU,YAAY,2BAEd,6BAAKV,IACL,6BAAKE,IACJP,EAAOgB,KAAI,SAACX,GAAD,OACV,uBACEY,QAAS,kBAfjB,SAA2BC,GACzBV,EAAWT,EAAUmB,IAcAC,CAAkBd,IACjCe,MAAO,CAAEC,SAAU,OAAQC,QAAS,SAAUC,OAAQ,WAFxD,UAIG,IACAlB,EAAO,cCjDZmB,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OACP,cAAC,aAAD,UACE,cAAC,EAAD,MAEFJ,I","file":"static/js/main.a1a813ea.chunk.js","sourcesContent":["import { useState } from \"react\";\n\nimport \"./styles.css\";\n\nconst emojiDict = {\n  \"üòä\": \"Smiling\",\n  \"üò≥\": \"disbelief\",\n  \"üòî\": \"sad\",\n  \"ü•°\": \"takeout box\",\n  \"‚ù§Ô∏è\": \"love\",\n  \"üòë\": \"annoyance\",\n  \"üíî\": \"Broken Heart\",\n  \"üéÑ\": \"Christmas Tree\",\n  \"üéÖ\": \"Santa Claus\",\n  \"üî•\": \"Fire\",\n  \"üéÅ\": \"Wrapped Gift\",\n  \"üòÇ\": \"Face with Tears of Joy\"\n};\nconst emojis = Object.keys(emojiDict);\nfunction App() {\n  const [emoji, setEmoji] = useState(\"\");\n  const [meaning, setMeaning] = useState(\"Emoji Meaning will appear here.....\");\n  function inputEmoji(event) {\n    var emojiInput = event.target.value;\n    setEmoji(emojiInput);\n    // var meaning=emoji[emojiInput];\n\n    //console.log(meaning);\n    if (emojiInput in emojiDict) {\n      setMeaning(emojiDict[emojiInput]);\n    } else {\n      setMeaning(\"Emoji is not in our database\");\n    }\n  }\n\n  function emojiClickHandler(inputEmoji) {\n    setMeaning(emojiDict[inputEmoji]);\n  }\n  return (\n    <div className=\"App\">\n      <h1>inside Outt</h1>\n      <input\n        onChange={inputEmoji}\n        value={emoji}\n        placeholder=\"Enter Your Emoji......\"\n      />\n      <h2>{emoji}</h2>\n      <h2>{meaning}</h2>\n      {emojis.map((emoji) => (\n        <span\n          onClick={() => emojiClickHandler(emoji)}\n          style={{ fontSize: \"2rem\", padding: \"0.5rem\", cursor: \"pointer\" }}\n        >\n          {\" \"}\n          {emoji}{\" \"}\n        </span>\n      ))}\n    </div>\n  );\n}\n\nexport default App;\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}